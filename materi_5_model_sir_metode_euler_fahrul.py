# -*- coding: utf-8 -*-
"""Materi-5-Model-SIR-Metode-Euler-Fahrul.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JkMLwsRwZCFb9A56_Ii1Mw3Sr726KvYq
"""

import numpy as np
import matplotlib.pyplot as plt

t0 = 0                 # waktu awal
tn = 300               # dalam waktu 300 hari
ndata = 1000           # jumlah data

t = np.linspace(t0, tn, ndata)
h = t[2] - t[1]

N = 1000               # jumlah populasi
I0 = 1                 # jumlah awal individu terinfeksi
R0 = 0                 # jumlah awal individu sembuh
S0 = N - I0 - R0       # jumlah awal individu rentan

I = np.zeros(ndata)
S = np.zeros(ndata)
R = np.zeros(ndata)

I[0] = I0
S[0] = S0
R[0] = R0

beta = 0.2             # laju penularan
gamma = 0.1            # laju pemulihan

for n in range(0, ndata-1):
    S[n+1] = S[n] - h * beta / N * S[n] * I[n]
    I[n+1] = I[n] + h * beta / N * S[n] * I[n] - h * gamma * I[n]
    R[n+1] = R[n] + h * gamma * I[n]

plt.plot(t, S, label='S')
plt.plot(t, I, label='I')
plt.plot(t, R, label='R')
plt.legend()
plt.show()

t0 = 0                 # waktu awal
tn = 450               # dalam waktu 450 hari
ndata = 1000           # jumlah data

t = np.linspace(t0, tn, ndata)
h = t[2] - t[1]

N = 2500               # jumlah populasi
I0 = 25                # jumlah awal individu terinfeksi
R0 = 3                 # jumlah awal individu sembuh
S0 = N - I0 - R0       # jumlah awal individu rentan

I = np.zeros(ndata)
S = np.zeros(ndata)
R = np.zeros(ndata)

I[0] = I0
S[0] = S0
R[0] = R0

beta = 0.5             # laju penularan
gamma = 0.2            # laju pemulihan

for n in range(0, ndata-1):
    S[n+1] = S[n] - h * beta / N * S[n] * I[n]
    I[n+1] = I[n] + h * beta / N * S[n] * I[n] - h * gamma * I[n]
    R[n+1] = R[n] + h * gamma * I[n]

plt.plot(t, S, label='S')
plt.plot(t, I, label='I')
plt.plot(t, R, label='R')
plt.legend()
plt.xlabel('Waktu (hari)')
plt.ylabel('Jumlah Individu (n)')
plt.title('Penyebaran Virus Covid-19 dalam 450 Hari di Populasi 2500 Orang')
plt.show()

t0 = 0                 # waktu awal
tn = 450               # dalam waktu 450 hari
ndata = 1000           # jumlah data

t = np.linspace(t0, tn, ndata)
h = t[2] - t[1]

N = 2500               # jumlah populasi
I0 = 25                # jumlah awal individu terinfeksi
R0 = 3                 # jumlah awal individu sembuh
S0 = N - I0 - R0       # jumlah awal individu rentan

I = np.zeros(ndata)
S = np.zeros(ndata)
R = np.zeros(ndata)

I[0] = I0
S[0] = S0
R[0] = R0

beta = 0.7             # laju penularan
gamma = 0.15           # laju pemulihan

for n in range(0, ndata-1):
    S[n+1] = S[n] - h * beta / N * S[n] * I[n]
    I[n+1] = I[n] + h * beta / N * S[n] * I[n] - h * gamma * I[n]
    R[n+1] = R[n] + h * gamma * I[n]

plt.plot(t, S, label='S')
plt.plot(t, I, label='I')
plt.plot(t, R, label='R')
plt.legend()
plt.xlabel('Waktu (hari)')
plt.ylabel('Jumlah Individu (n)')
plt.title('Penyebaran Virus Covid-19 dengan Laju Penularan 0.7 dan Laju Pemulihan 0.15')
plt.show()